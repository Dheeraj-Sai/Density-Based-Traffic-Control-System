;#include <alcd.h>
;#include <delay.h>
;#include <mega16.h>
;PCODE: $00000000 VOL: 0
	#ifndef __SLEEP_DEFINED__
;PCODE: $00000001 VOL: 0
	#define __SLEEP_DEFINED__
;PCODE: $00000002 VOL: 0
	.EQU __se_bit=0x40
;PCODE: $00000003 VOL: 0
	.EQU __sm_mask=0xB0
;PCODE: $00000004 VOL: 0
	.EQU __sm_powerdown=0x20
;PCODE: $00000005 VOL: 0
	.EQU __sm_powersave=0x30
;PCODE: $00000006 VOL: 0
	.EQU __sm_standby=0xA0
;PCODE: $00000007 VOL: 0
	.EQU __sm_ext_standby=0xB0
;PCODE: $00000008 VOL: 0
	.EQU __sm_adc_noise_red=0x10
;PCODE: $00000009 VOL: 0
	.SET power_ctrl_reg=mcucr
;PCODE: $0000000A VOL: 0
	#endif
;PCODE: $0000000B VOL: 0
;PCODE: $0000000C VOL: 0
;#include <stdio.h>
;void main(void){
; 0000 0005 void main(void){

	.CSEG
;PCODE: $0000000D VOL: 0
; 0000 0006 lcd_init(16);
;PCODE: $0000000E VOL: 0
;PCODE: $0000000F VOL: 0
; 0000 0007 lcd_clear();
;PCODE: $00000010 VOL: 0
; 0000 0008 DDRB = 0x01;
;PCODE: $00000011 VOL: 0
;PCODE: $00000012 VOL: 0
; 0000 0009 //set port B as output
; 0000 000A DDRD = 0x00;
;PCODE: $00000013 VOL: 0
;PCODE: $00000014 VOL: 0
; 0000 000B //set port D as input
; 0000 000C while (1)
;PCODE: $00000015 VOL: 0
; 0000 000D {
; 0000 000E if (PIND.5 == 1 && PIND.7 == 0)
;PCODE: $00000016 VOL: 0
;PCODE: $00000017 VOL: 0
;PCODE: $00000018 VOL: 0
;PCODE: $00000019 VOL: 0
;PCODE: $0000001A VOL: 0
;PCODE: $0000001B VOL: 0
;PCODE: $0000001C VOL: 0
;PCODE: $0000001D VOL: 0
;PCODE: $0000001E VOL: 0
;PCODE: $0000001F VOL: 0
; 0000 000F //check if the over voltage pin is high and the other is low
; 0000 0010 delay_ms(100);//delay for 0.1 sec to see if the fault is still happening
;PCODE: $00000020 VOL: 0
;PCODE: $00000021 VOL: 0
;PCODE: $00000022 VOL: 0
; 0000 0011 if (PIND.5 == 1 && PIND.7 == 0)
;PCODE: $00000023 VOL: 0
;PCODE: $00000024 VOL: 0
;PCODE: $00000025 VOL: 0
;PCODE: $00000026 VOL: 0
;PCODE: $00000027 VOL: 0
;PCODE: $00000028 VOL: 0
;PCODE: $00000029 VOL: 0
;PCODE: $0000002A VOL: 0
;PCODE: $0000002B VOL: 0
;PCODE: $0000002C VOL: 0
;PCODE: $0000002D VOL: 0
; 0000 0012 //check for the fault again
; 0000 0013 {
; 0000 0014 lcd_clear();
;PCODE: $0000002E VOL: 0
; 0000 0015 PORTB.0 = 1;
;PCODE: $0000002F VOL: 0
;PCODE: $00000030 VOL: 0
; 0000 0016 //activate the output and drive the relay
; 0000 0017 lcd_gotoxy(0,0);
;PCODE: $00000031 VOL: 0
;PCODE: $00000032 VOL: 0
;PCODE: $00000033 VOL: 0
;PCODE: $00000034 VOL: 0
; 0000 0018 lcd_puts("Operation status");
;PCODE: $00000035 VOL: 0
;PCODE: $00000036 VOL: 0
;PCODE: $00000037 VOL: 0
; 0000 0019 lcd_puts("OVER VOLTAGE ");
;PCODE: $00000038 VOL: 0
;PCODE: $00000039 VOL: 0
;PCODE: $0000003A VOL: 0
; 0000 001A delay_ms(500);
;PCODE: $0000003B VOL: 0
;PCODE: $0000003C VOL: 0
; 0000 001B //delay for fluctuations possibility
; 0000 001C }
; 0000 001D if (PIND.7 == 1 && PIND.5 == 0)
;PCODE: $0000003D VOL: 0
;PCODE: $0000003E VOL: 0
;PCODE: $0000003F VOL: 0
;PCODE: $00000040 VOL: 0
;PCODE: $00000041 VOL: 0
;PCODE: $00000042 VOL: 0
;PCODE: $00000043 VOL: 0
;PCODE: $00000044 VOL: 0
;PCODE: $00000045 VOL: 0
;PCODE: $00000046 VOL: 0
;PCODE: $00000047 VOL: 0
; 0000 001E //check if under voltage pin is high and the other is low
; 0000 001F delay_ms(100);//delay for the same purpose as before
;PCODE: $00000048 VOL: 0
;PCODE: $00000049 VOL: 0
;PCODE: $0000004A VOL: 0
; 0000 0020 if (PIND.7 == 1 && PIND.5 == 0)
;PCODE: $0000004B VOL: 0
;PCODE: $0000004C VOL: 0
;PCODE: $0000004D VOL: 0
;PCODE: $0000004E VOL: 0
;PCODE: $0000004F VOL: 0
;PCODE: $00000050 VOL: 0
;PCODE: $00000051 VOL: 0
;PCODE: $00000052 VOL: 0
;PCODE: $00000053 VOL: 0
;PCODE: $00000054 VOL: 0
;PCODE: $00000055 VOL: 0
; 0000 0021 //check the pin again
; 0000 0022 {
; 0000 0023 PORTB.0 = 1;
;PCODE: $00000056 VOL: 0
;PCODE: $00000057 VOL: 0
; 0000 0024 //activate the output and drive the relay
; 0000 0025 lcd_clear();
;PCODE: $00000058 VOL: 0
; 0000 0026 lcd_gotoxy(0,0);
;PCODE: $00000059 VOL: 0
;PCODE: $0000005A VOL: 0
;PCODE: $0000005B VOL: 0
;PCODE: $0000005C VOL: 0
; 0000 0027 lcd_puts("Operation status");
;PCODE: $0000005D VOL: 0
;PCODE: $0000005E VOL: 0
;PCODE: $0000005F VOL: 0
; 0000 0028 lcd_puts("UNDER VOLTAGE ");
;PCODE: $00000060 VOL: 0
;PCODE: $00000061 VOL: 0
;PCODE: $00000062 VOL: 0
; 0000 0029 delay_ms(500);
;PCODE: $00000063 VOL: 0
;PCODE: $00000064 VOL: 0
; 0000 002A //delay for fluctuations possibility
; 0000 002B }
; 0000 002C if (PIND.5 == 0 && PIND.7 == 0)
;PCODE: $00000065 VOL: 0
;PCODE: $00000066 VOL: 0
;PCODE: $00000067 VOL: 0
;PCODE: $00000068 VOL: 0
;PCODE: $00000069 VOL: 0
;PCODE: $0000006A VOL: 0
;PCODE: $0000006B VOL: 0
;PCODE: $0000006C VOL: 0
;PCODE: $0000006D VOL: 0
;PCODE: $0000006E VOL: 0
;PCODE: $0000006F VOL: 0
; 0000 002D //chck if there is no under voltage or over voltage
; 0000 002E {
; 0000 002F PORTB.0 = 0;
;PCODE: $00000070 VOL: 0
;PCODE: $00000071 VOL: 0
; 0000 0030 lcd_clear();
;PCODE: $00000072 VOL: 0
; 0000 0031 lcd_gotoxy(0,0);
;PCODE: $00000073 VOL: 0
;PCODE: $00000074 VOL: 0
;PCODE: $00000075 VOL: 0
;PCODE: $00000076 VOL: 0
; 0000 0032 lcd_puts("Operation status");
;PCODE: $00000077 VOL: 0
;PCODE: $00000078 VOL: 0
;PCODE: $00000079 VOL: 0
; 0000 0033 lcd_puts("NORMAL OPERATION");
;PCODE: $0000007A VOL: 0
;PCODE: $0000007B VOL: 0
;PCODE: $0000007C VOL: 0
; 0000 0034 }}}
;PCODE: $0000007D VOL: 0
;PCODE: $0000007E VOL: 0
;PCODE: $0000007F VOL: 0
;PCODE: $00000080 VOL: 0
;PCODE: $00000081 VOL: 0
;PCODE: $00000082 VOL: 0

	.DSEG
_0xE:
	.BYTE 0x61
